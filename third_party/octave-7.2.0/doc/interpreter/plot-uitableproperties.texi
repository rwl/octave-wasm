@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2022 The Octave Project Developers
@c
@c This file is part of Octave.
@c
@c Octave is free software: you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by
@c the Free Software Foundation, either version 3 of the License, or
@c (at your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but
@c WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <https://www.gnu.org/licenses/>.

Properties of @code{uitable} objects (@pxref{XREFuitable,,uitable}):

@table @asis

@anchor{XREFuitablebackgroundcolor}
@prindex uitable backgroundcolor
@item @code{backgroundcolor}: def. 2-by-3 double



@anchor{XREFuitablebeingdeleted}
@prindex uitable beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFuitablebusyaction}
@prindex uitable busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}
Define how Octave handles the execution of this object's callback properties when it is unable to interrupt another object's executing callback.  This is only relevant when the currently executing callback object has its @code{interruptible} property set to @qcode{"off"}.  The @code{busyaction} property of the interrupting callback object indicates whether the interrupting callback is queued (@qcode{"queue"} (default)) or discarded (@qcode{"cancel"}).
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuitablebuttondownfcn}
@prindex uitable buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuitablecelleditcallback}
@prindex uitable celleditcallback
@item @code{celleditcallback}: def. @code{[](0x0)}



@anchor{XREFuitablecellselectioncallback}
@prindex uitable cellselectioncallback
@item @code{cellselectioncallback}: def. @code{[](0x0)}



@anchor{XREFuitablechildren}
@prindex uitable children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
Graphics handles of the uitable's children.


@anchor{XREFuitableclipping}
@prindex uitable clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{clipping} is @qcode{"on"}, the uitable is clipped in its parent axes limits.


@anchor{XREFuitablecolumneditable}
@prindex uitable columneditable
@item @code{columneditable}: def. @code{[](0x0)}



@anchor{XREFuitablecolumnformat}
@prindex uitable columnformat
@item @code{columnformat}: def. @code{@{@}(0x0)}



@anchor{XREFuitablecolumnname}
@prindex uitable columnname
@item @code{columnname}: def. @qcode{"numbered"}



@anchor{XREFuitablecolumnwidth}
@prindex uitable columnwidth
@item @code{columnwidth}: def. @qcode{"auto"}



@anchor{XREFuitablecontextmenu}
@prindex uitable contextmenu
@item @code{contextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this uitable object.


@anchor{XREFuitablecreatefcn}
@prindex uitable createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after uitable has been created.  Function is set by using default property on root object, e.g., @code{set (groot, "defaultuitablecreatefcn", 'disp ("uitable created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuitabledata}
@prindex uitable data
@item @code{data}: def. @code{[](0x0)}



@anchor{XREFuitabledeletefcn}
@prindex uitable deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before uitable is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuitableenable}
@prindex uitable enable
@item @code{enable}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFuitableextent}
@prindex uitable extent
@item @code{extent} (read-only): four-element vector



@anchor{XREFuitablefontangle}
@prindex uitable fontangle
@item @code{fontangle}: @qcode{"italic"} | @{@qcode{"normal"}@}
Control whether the font is italic or normal.


@anchor{XREFuitablefontname}
@prindex uitable fontname
@item @code{fontname}: string, def. @qcode{"*"}
Name of font used for text rendering.  When setting this property, the text rendering engine will search for a matching font in your system.  If none is found then text is rendered using a default sans serif font (same as the default @qcode{"*"} value).

Programming Note: On systems that donâ€™t use FontConfig natively (all but Linux), the font cache is built when Octave is installed.  You will need to run @code{system ("fc-cache -fv")} manually after installing new fonts.


@anchor{XREFuitablefontsize}
@prindex uitable fontsize
@item @code{fontsize}: scalar, def. @code{10}
Size of the font used for text rendering.  @xref{XREFuitablefontunits, , fontunits property}.


@anchor{XREFuitablefontunits}
@prindex uitable fontunits
@item @code{fontunits}: @qcode{"centimeters"} | @qcode{"inches"} | @qcode{"normalized"} | @qcode{"pixels"} | @{@qcode{"points"}@}
Units used to interpret the @qcode{"fontsize"} property.


@anchor{XREFuitablefontweight}
@prindex uitable fontweight
@item @code{fontweight}: @qcode{"bold"} | @{@qcode{"normal"}@}
Control the variant of the base font used for text rendering.


@anchor{XREFuitableforegroundcolor}
@prindex uitable foregroundcolor
@item @code{foregroundcolor}: def. @code{[0   0   0]}



@anchor{XREFuitablehandlevisibility}
@prindex uitable handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the uitable's handle is not visible in its parent's "children" property.


@anchor{XREFuitablehittest}
@prindex uitable hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether uitable processes mouse events or passes them to ancestors of the object.  When enabled, the object may respond to mouse clicks by evaluating the @qcode{"buttondownfcn"}, showing the uicontextmenu, and eventually becoming the root @qcode{"currentobject"}.  This property is only relevant when the object can accept mouse clicks which is determined by the @qcode{"pickableparts"} property.  @xref{XREFuitablepickableparts, , @w{pickableparts property}}.


@anchor{XREFuitableinterruptible}
@prindex uitable interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether this object's callback functions may be interrupted by other callbacks.  By default @code{interruptible} is @qcode{"on"} and callbacks that make use of @code{drawnow}, @code{figure}, @code{waitfor}, @code{getframe} or @code{pause} functions are eventually interrupted.
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuitablekeypressfcn}
@prindex uitable keypressfcn
@item @code{keypressfcn}: def. @code{[](0x0)}



@anchor{XREFuitablekeyreleasefcn}
@prindex uitable keyreleasefcn
@item @code{keyreleasefcn}: def. @code{[](0x0)}



@anchor{XREFuitableparent}
@prindex uitable parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.


@anchor{XREFuitablepickableparts}
@prindex uitable pickableparts
@item @code{pickableparts}: @qcode{"all"} | @qcode{"none"} | @{@qcode{"visible"}@}
Specify whether uitable will accept mouse clicks.  By default, @code{pickableparts} is @qcode{"visible"} and only visible parts of the uitable or its children may react to mouse clicks.  When @code{pickableparts} is @qcode{"all"} both visible and invisible parts (or children) may react to mouse clicks.  When @code{pickableparts} is @qcode{"none"} mouse clicks on the object are ignored and transmitted to any objects underneath this one.  When an object is configured to accept mouse clicks the @qcode{"hittest"} property will determine how they are processed.  @xref{XREFuitablehittest, , @w{hittest property}}.


@anchor{XREFuitableposition}
@prindex uitable position
@item @code{position}: def. @code{[20    20   300   300]}



@anchor{XREFuitablerearrangeablecolumns}
@prindex uitable rearrangeablecolumns
@item @code{rearrangeablecolumns}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFuitablerowname}
@prindex uitable rowname
@item @code{rowname}: def. @qcode{"numbered"}



@anchor{XREFuitablerowstriping}
@prindex uitable rowstriping
@item @code{rowstriping}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFuitableselected}
@prindex uitable selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFuitableselectionhighlight}
@prindex uitable selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFuitabletag}
@prindex uitable tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFuitabletooltipstring}
@prindex uitable tooltipstring
@item @code{tooltipstring}: def. @qcode{""}



@anchor{XREFuitabletype}
@prindex uitable type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"uitable"}


@anchor{XREFuitableunits}
@prindex uitable units
@item @code{units}: @qcode{"centimeters"} | @qcode{"characters"} | @qcode{"inches"} | @qcode{"normalized"} | @{@qcode{"pixels"}@} | @qcode{"points"}



@anchor{XREFuitableuserdata}
@prindex uitable userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.


@anchor{XREFuitablevisible}
@prindex uitable visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the uitable is not rendered on screen.

@end table